import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";

export default function Editar() {
  // declara uma nova variavel dados com state e atribui ao objeto
  const [data, setData] = useState({
    id: "",
    name: "",
    email: "",
  });

  //declara a variavel para receber a mensagem
  const [message, setMessage] = useState("");

  //recebe o parametro enviado na url
  const router = useRouter();
  const [id] = useState(router.query.id);
  //console.log(router.query.id);

  //cria a funçao com requisiçao para api
  const getUser = async () => {
    //retornar erro quando nao tiver o id do usuario
    if (id === undefined) {
      setMessage("Erro: Usuário não encontrado");
      return;
    }

    //realiza a requisiçao para api com axios para a rota recuperar os usuarios
    await axios
      .get("http://localhost:8080/users/" + id)
      //acessa o then quando a api retornar status 200
      .then((response) => {
        //atribuir o registro no state data
        //   console.log(response.data.user);
        setData(response.data.user);
      })
      //acessa o catch quando a api retornar erro
      .catch((err) => {
        if (err.response) {
          //atribui a mensagem no state message
          setMessage(err.response.data.mensagem);
        } else {
          //atribui a mensagem no state message
          setMessage("Erro, tente mais tarde");
        }
      });
  };

  //useEffect é usado para lidar com efeitos colaterais em um computador por exemplo, atualizar o estado do componente, fazer a  APIs, manipular eventos entre outros
  useEffect(() => {
    getUser();
  }, [id]);

  //recebe os dados dos campos do formulario
  const valueInput = (e) =>
    setData({ ...data, [e.target.name]: e.target.value });

  //criar a constante com os dados do cabecalho
  const headers = {
    headers: {
      //indicar o que sera enviado os dados em formato de objeto
      "Content-Type": "application/json",
    },
  };

  //executar a função quando o usuario clicar no botao do formulario
  const editUser = async (e) => {
    //bloquear o recarregamento da pagina
    e.preventDefault();

    //fazer a requisição para o servidor utilizando axios, indicando o metodo da requisição, o endereço, enviar os dados do formulario e o cabeçalho.
    await axios
      .put("http://localhost:8080/users", data, headers)
      .then((response) => {
        //acessa o then quando a api retornar o status 200
        setMessage(response.data.mensagem);
      })
      .catch((err) => {
        //acessa o catch quando a api retornar erro
        //atribuir a mensagem no state message
        if (err.response) {
          setMessage(err.response.data.mensagem);
        } else {
          setMessage(
            "Erro: Tente noavamente mais tarde ou entre em contato com...."
          );
        }
      });
  };

  return (
    <>
      <Head>
        <title>CRUD</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Link href={"/"}>
          <button type="button">Listar</button>
        </Link>
        {""}
        <Link href={`/visualizar/${data.id}`}>
          <button type="button">Visualizar</button>
        </Link>
        {""}

        <h2>Editar Usuário</h2>

        {message ? <p>{message}</p> : ""}
        <form onSubmit={editUser}>
          <input type="hidden" name="id" value={data.id} />
          <label>Nome: </label>
          <input
            type="text"
            name="name"
            placeholder="Digite o nome"
            onChange={valueInput}
            value={data.name}
          />{" "}
          <br />
          <hr />
          <label>Email: </label>
          <input
            type="email"
            name="email"
            placeholder="Digite o E-mail"
            onChange={valueInput}
            value={data.email}
          />{" "}
          <br />
          <button type="submit">Salvar</button>
        </form>
      </main>
    </>
  );
}
