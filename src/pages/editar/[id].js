import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import "bootstrap/dist/css/bootstrap.css";
import { Navbar, Container, Nav, Form, Button } from "react-bootstrap";

export default function Editar() {
  // declara uma nova variavel dados com state e atribui ao objeto
  const [data, setData] = useState({
    id: "",
    name: "",
    email: "",
    celular: "",
    nascimento: "",
    endereco: "",
    sexo: "",
  });

  //declara a variavel para receber a mensagem
  const [message, setMessage] = useState("");

  //recebe o parametro enviado na url
  const router = useRouter();
  const [id] = useState(router.query.id);
  //console.log(router.query.id);

  //cria a funçao com requisiçao para api
  const getUser = async () => {
    //retornar erro quando nao tiver o id do usuario
    if (id === undefined) {
      setMessage("Erro: Usuário não encontrado");
      return;
    }

    //realiza a requisiçao para api com axios para a rota recuperar os usuarios
    await axios
      .get("http://localhost:8080/users/" + id)
      //acessa o then quando a api retornar status 200
      .then((response) => {
        //atribuir o registro no state data
        console.log(response.data.user);
        setData(response.data.user);
      })
      //acessa o catch quando a api retornar erro
      .catch((err) => {
        if (err.response) {
          //atribui a mensagem no state message
          setMessage(err.response.data.mensagem);
        } else {
          //atribui a mensagem no state message
          setMessage("Erro, tente mais tarde");
        }
      });
  };

  //useEffect é usado para lidar com efeitos colaterais em um computador por exemplo, atualizar o estado do componente, fazer a  APIs, manipular eventos entre outros
  useEffect(() => {
    getUser();
  }, [id]);

  //recebe os dados dos campos do formulario
  const valueInput = (e) =>
    setData({ ...data, [e.target.name]: e.target.value });

  //criar a constante com os dados do cabecalho
  const headers = {
    headers: {
      //indicar o que sera enviado os dados em formato de objeto
      "Content-Type": "application/json",
    },
  };

  //executar a função quando o usuario clicar no botao do formulario
  const editUser = async (e) => {
    //bloquear o recarregamento da pagina
    e.preventDefault();

    //fazer a requisição para o servidor utilizando axios, indicando o metodo da requisição, o endereço, enviar os dados do formulario e o cabeçalho.
    await axios
      .put("http://localhost:8080/users", data, headers)
      .then((response) => {
        //acessa o then quando a api retornar o status 200
        console.log(response.data.users);

        setMessage(response.data.mensagem);
      })
      .catch((err) => {
        //acessa o catch quando a api retornar erro
        //atribuir a mensagem no state message
        if (err.response) {
          setMessage(err.response.data.mensagem);
        } else {
          setMessage(
            "Erro: Tente noavamente mais tarde ou entre em contato com...."
          );
        }
      });
  };

  return (
    <>
      <Head>
        <title>CRUD</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="App">
          <Navbar className="App-header" bg="dark" variant="dark">
            <Container>
              <Navbar.Toggle aria-controls="navbarScroll" />
              <Navbar.Collapse id="navbarScroll">
                <Nav
                  className="me-auto my-2 my-lg-0"
                  style={{ maxHeight: "100px" }}
                  navbarScroll
                >
                  <Link href={"/"}>
                    <button className="btn btn-primary mx-1" type="button">
                      Listar
                    </button>
                  </Link>

                  <Link href={`/visualizar/${data.id}`}>
                    <button className="btn btn-primary mx-1" type="button">
                      Visualizar
                    </button>
                  </Link>
                </Nav>
              </Navbar.Collapse>
            </Container>
          </Navbar>

          <div>
            <Form className="d-flex align-items-center d-flex flex-wrap p-2 ">
              <h2>Editar Usuário</h2>
            </Form>
          </div>
          {message ? <p>{message}</p> : ""}
          <Form
            onSubmit={editUser}
            className="d-flex flex-wrap align-items-center   p-3 mx-2  "
          >
            <input type="hidden" name="id" value={data.id} />
            <br />
            <Form.Group controlId="FormText" className="mx-1 p-1">
              <Form.Label className="col">Nome:</Form.Label>
              <Form.Control
                type="text"
                name="name"
                onChange={valueInput}
                value={data.name}
              />
              <Form.Text className="text-muted">Digite seu Nome.</Form.Text>
            </Form.Group>
            <br />
            <Form.Group controlId="FormEmail" className="mx-1 p-1">
              <Form.Label>E-Mail:</Form.Label>
              <Form.Control
                type="email"
                name="email"
                placeholder="Exemplo@Email.com"
                onChange={valueInput}
                value={data.email}
              />
              <Form.Text className="text-muted">
                Digite seu E-Mail válido.
              </Form.Text>
            </Form.Group>
            <br />
            <Form.Group controlId="FormTel" className="mx-1 p-1">
              <Form.Label>Celular:</Form.Label>
              <Form.Control
                type="tel"
                name="celular"
                onChange={valueInput}
                value={data.celular}
              />
              <Form.Text className="text-muted">
                Digite seu número de Celular válido.
              </Form.Text>
            </Form.Group>
            <br />
            <Form.Group controlId="FormDate" className="mx-1 p-1">
              <Form.Label>Data de Nascimento:</Form.Label>
              <Form.Control
                type="date"
                name="nascimento"
                onChange={valueInput}
                value={data.nascimento}
              />
              <Form.Text className="text-muted">
                Digite sua data de Nascimento
              </Form.Text>
            </Form.Group>
            <br />
            <Form.Group controlId="FormText">
              <Form.Label>Endereço:</Form.Label>
              <Form.Control
                type="text"
                name="endereco"
                onChange={valueInput}
                value={data.endereco}
              />
              <Form.Text className="text-muted">
                Digite seu Endereço residencial
              </Form.Text>
            </Form.Group>
            <br />
            <Form.Group controlId="FormText" className="mx-1 p-1">
              <Form.Label>Sexo:</Form.Label>
              <Form.Control
                type="text"
                name="sexo"
                onChange={valueInput}
                value={data.sexo}
              />
              <Form.Text className="text-muted">Informe seu Sexo.</Form.Text>
            </Form.Group>
            <br />
            <Button variant="primary" type="submit">
              Salvar
            </Button>
          </Form>
        </div>
      </main>
    </>
  );
}
